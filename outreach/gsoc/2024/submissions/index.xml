<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2024 Submissions on Waycrate</title><link>https://waycrate.github.io/outreach/gsoc/2024/submissions/</link><description>Recent content in 2024 Submissions on Waycrate</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://waycrate.github.io/outreach/gsoc/2024/submissions/index.xml" rel="self" type="application/rss+xml"/><item><title>Project 1 - Introduce DMA-BUF backend in Wayshot for high performance screen capture</title><link>https://waycrate.github.io/outreach/gsoc/2024/submissions/project-1-sooraj/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://waycrate.github.io/outreach/gsoc/2024/submissions/project-1-sooraj/</guid><description>&lt;p>Mentor: Zubair Mohammed&lt;br>
Student: Sooraj S&lt;/p>
&lt;p>Original writeup is hosted at &lt;a href="https://cheerfulpianissimo.github.io/notes/GSOC/GSOC.html">https://cheerfulpianissimo.github.io/notes/GSOC/GSOC.html&lt;/a>&lt;/p></description></item><item><title>Project 2 - Improving the security model of swhkd</title><link>https://waycrate.github.io/outreach/gsoc/2024/submissions/project-2-ishan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://waycrate.github.io/outreach/gsoc/2024/submissions/project-2-ishan/</guid><description>&lt;h1 id="improving-the-security-model-of-swhkd">Improving the security model of swhkd&lt;/h1>
&lt;ul>
&lt;li>&lt;strong>Mentors&lt;/strong>: Aakash Sen Sharma&lt;/li>
&lt;li>&lt;strong>Student&lt;/strong>: Ishan Joshi&lt;/li>
&lt;/ul>
&lt;p>Over the past few months, I have been working on a lot of different changes to the swhkd codebase.
Me and my mentor together have gone through various approachs that could be used to simplify the swhkd codebase
and also improve it&amp;rsquo;s security model.
The journey has been thoroughly documented and ordered, including all of the mistakes that I made and the things that I learnt on
this site itself.
This changelog attempts to summarize all of the changes that have been made in the codebase and the reasons behind them.
This changelog will be mirrored over to a Github gist and will be submitted as the final report for the project.&lt;/p></description></item><item><title>Project 3 - Formalize SWHKD parser using regular grammar notation</title><link>https://waycrate.github.io/outreach/gsoc/2024/submissions/project-3-himadri/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://waycrate.github.io/outreach/gsoc/2024/submissions/project-3-himadri/</guid><description>&lt;h1 id="overview">Overview&lt;/h1>
&lt;p>Hello and welcome to the final GSoC post for 2024! My task was to formalize the SWHKD parser using context-free EBNF notation. This post is to serve as a birdseye view of what
I have developed over this summer.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Mentors&lt;/strong>: Aakash Sen Sharma&lt;/li>
&lt;li>&lt;strong>Student&lt;/strong>: Himadri Bhattacharjee&lt;/li>
&lt;/ul>
&lt;h1 id="report">Report&lt;/h1>
&lt;h2 id="architecting-the-parser">Architecting the parser&lt;/h2>
&lt;p>I started out with the scaffolding of the parser in an extended Backus-Naur form garmmar template
in a separate repository called &lt;a href="https://github.com/waycrate/sweet">SWEET&lt;/a> using a Rust framework
called &lt;a href="https://pest.rs">pest.rs&lt;/a>. Quite a lot of time was
spent in modelling the architecture of the syntax tree for our domain specific language.&lt;/p></description></item></channel></rss>